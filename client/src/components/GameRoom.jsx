function GameRoom({
    roomCode,
    playerName,
    isRoomOwner,
    roomError,
    roomPlayers,
    gameStarted,
    onStartGame,
    isStartingGame
}) {
    return (
        <div className="center-container">
            <div className="game-room-wide">
                <h2>Ph√≤ng: {roomCode}</h2>
                <h3>Xin ch√†o, {playerName}!</h3>
                <p>Chia s·∫ª m√£ ph√≤ng cho b·∫°n b√® v√† ch·ªù ƒë·ªß 2 ng∆∞·ªùi ch∆°i ƒë·ªÉ b·∫Øt ƒë·∫ßu.</p>
                {isRoomOwner && <p className="owner-badge">üëë B·∫°n l√† ch·ªß ph√≤ng</p>}

                {roomError && (
                    <div className="error-message">
                        ‚ùå {roomError}
                    </div>
                )}

                <div className="players-list">
                    <h4>üë• Ng∆∞·ªùi ch∆°i trong ph√≤ng ({roomPlayers.length}/2):</h4>
                    {roomPlayers.map((player, index) => (
                        <div key={player.id} className="player-item">
                            <span className="player-name">
                                {index === 0 ? 'üëë' : 'üî∏'} {player.name}
                                {player.name === playerName && ' (B·∫°n)'}
                            </span>
                        </div>
                    ))}
                </div>

                {roomPlayers.length === 1 && (
                    <div className="waiting-message">
                        <p>‚è≥ ƒêang ch·ªù ƒë·ªëi th·ªß v√†o ph√≤ng...</p>
                        <p>Chia s·∫ª m√£ ph√≤ng <strong>{roomCode}</strong> cho b·∫°n b√®!</p>
                    </div>
                )}

                {roomPlayers.length === 2 && !gameStarted && (
                    <div className="ready-message">
                        <p>Ph√≤ng ƒë√£ ƒë·ªß ng∆∞·ªùi! S·∫µn s√†ng ch∆°i!</p>
                        {isRoomOwner ? (
                            <button
                                className="start-game-btn"
                                onClick={onStartGame}
                                disabled={isStartingGame}
                            >
                                {isStartingGame && <span className="loading-spinner"></span>}
                                {isStartingGame ? 'ƒêang b·∫Øt ƒë·∫ßu...' : 'B·∫Øt ƒë·∫ßu tr√≤ ch∆°i'}
                            </button>
                        ) : (
                            <p>Ch·ªù ch·ªß ph√≤ng b·∫Øt ƒë·∫ßu tr√≤ ch∆°i...</p>
                        )}
                    </div>
                )}

                <button className="ghost-btn back-btn" onClick={() => window.location.reload()}>
                    ‚Üê V·ªÅ trang ch·ªß
                </button>
            </div>
        </div>
    )
}

export default GameRoom
